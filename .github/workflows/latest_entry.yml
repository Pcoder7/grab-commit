# ====================================================================
#              Automated Audit of Latest Workflow Commit
#
# This version has been corrected to use job-level environment
# variables for better scoping and clarity, as requested.
# ====================================================================

name: "Automated Audit: Extract Latest Recon Data"

on:
  workflow_run:
    workflows: ["permutate.yml"]
    types:
      - completed
      
  workflow_dispatch:
      

jobs:
  extract_latest_commit_data:
    # Only run if the triggering workflow was a success.
    #if: github.event.workflow_run.conclusion == 'success'
    
    name: Extract Data From Latest Commit
    runs-on: ubuntu-latest
    env:
      STORE_OWNER: ${{ secrets.SECONDRY_USERNAME }}
      STORE_REPO_NAME: ${{ secrets.STORE }}
      STORE_TOKEN: ${{ secrets.PAT_FOR_SECONDRY }}

    steps:
      # Step 1: Checkout the private 'store-recon' repository.
      # This step correctly uses the job-level environment variables.
      - name: Checkout the private store-recon repository
        uses: actions/checkout@v3
        with:
          repository: ${{ env.STORE_OWNER }}/${{ env.STORE_REPO_NAME }}
          token: ${{ env.STORE_TOKEN }}
          fetch-depth: 0

      # Step 2: Find the single most recent commit and extract its data.
      - name: Extract New Entries via git show
        shell: bash
        run: |
          PATTERN="feat: Add new assets from distributed permutation scan"

          # figure out exactly which commit to inspect
          if [[ "${{ github.event_name }}" == "workflow_run" ]]; then
            COMMIT="${{ github.event.workflow_run.head_sha }}"
            echo "▶️ workflow_run → inspecting $COMMIT"
            git fetch --no-tags origin "$COMMIT"
          else
            echo "▶️ manual trigger → finding latest '$PATTERN'"
            COMMIT=$(git log \
              --no-merges \
              --grep="$PATTERN" \
              -n1 \
              --format="%H") 
            if [ -z "$COMMIT" ]; then
              echo "::error::No commit found matching '$PATTERN'"
              exit 1
            fi
            echo "   → found commit $COMMIT"
          fi

          # show each parent‑diff (including for merges), zero‑context
          git show -m "$COMMIT" --unified=0 \
            | grep '^\+' \
            | grep -v '^\+\+\+' \
            > latest_entries.txt || true

          COUNT=$(wc -l < latest_entries.txt)
          if [ "$COUNT" -eq 0 ]; then
            echo "::error::No added lines found in $COMMIT"
            exit 1
          fi

          echo "✅ Found $COUNT new entries in $COMMIT"




          echo "✅ Found $COUNT new entries in $COMMIT"

    

          #git show -m "$LATEST_COMMIT_HASH" | grep '^\+' | grep -v '^\+\+\+' > latest_entries.txt || true

         
          echo "Total new entries found: $(wc -l < latest_entries.txt)"

      # Step 3: Upload the extracted data as a downloadable artifact.
      - name: Upload Latest Entries as an Artifact
        uses: actions/upload-artifact@v4
        with:
          name: "new-entries-from-run-${{ github.event.workflow_run.id }}"
          path: latest_entries.txt
          retention-days: 1
